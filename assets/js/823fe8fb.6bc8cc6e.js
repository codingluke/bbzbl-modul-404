"use strict";(self.webpackChunkbbzbl_modul_404=self.webpackChunkbbzbl_modul_404||[]).push([[4588],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=d(n),p=r,h=m["".concat(s,".").concat(p)]||m[p]||c[p]||a;return n?i.createElement(h,o(o({ref:t},u),{},{components:n})):i.createElement(h,o({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5961:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const a={},o="ActionListener",l={unversionedId:"konzepte/actionlistener",id:"konzepte/actionlistener",title:"ActionListener",description:"- Dies sollen alle vor dem LB1 verstanden und verinnerlicht haben!",source:"@site/docs/konzepte/actionlistener.md",sourceDirName:"konzepte",slug:"/konzepte/actionlistener",permalink:"/bbzbl-modul-404/docs/konzepte/actionlistener",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-404/tree/main/docs/konzepte/actionlistener.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Konzepte",permalink:"/bbzbl-modul-404/docs/category/konzepte"},next:{title:"Fachklassen",permalink:"/bbzbl-modul-404/docs/konzepte/fachklassen"}},s={},d=[{value:"Das Interface <code>ActionListener</code>",id:"das-interface-actionlistener",level:2},{value:"ActionListener Beispiel: TimeButton Klasse",id:"actionlistener-beispiel-timebutton-klasse",level:2},{value:"Erl\xe4uterung zum Code",id:"erl\xe4uterung-zum-code",level:3},{value:"Feststellen, welcher Button gedr\xfcckt wurde",id:"feststellen-welcher-button-gedr\xfcckt-wurde",level:2}],u={toc:d};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"actionlistener"},"ActionListener"),(0,r.kt)("admonition",{title:"Allerwesentlichster Part!",type:"danger"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Dies sollen alle ",(0,r.kt)("strong",{parentName:"li"},"vor dem LB1 verstanden und verinnerlicht haben"),"! "),(0,r.kt)("li",{parentName:"ul"},"Ohne dieses Wissen ist das Projekt und auch die Pr\xfcfung nicht zu bestehen!"))),(0,r.kt)("h2",{id:"das-interface-actionlistener"},"Das Interface ",(0,r.kt)("inlineCode",{parentName:"h2"},"ActionListener")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ActionListener")," ist ein Interface, welches von Java mitgeliefert wird."),(0,r.kt)("li",{parentName:"ul"},"Es ",(0,r.kt)("strong",{parentName:"li"},"definiert")," die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"public void actionPerformed(ActionEvent e);")),(0,r.kt)("li",{parentName:"ul"},"Alle Klasse die den ActionListener implementieren (",(0,r.kt)("inlineCode",{parentName:"li"},"implements ActionListener"),") ",(0,r.kt)("strong",{parentName:"li"},"m\xfcssen")," auch die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"public void actionPerformed(ActionEvent e);")," implementieren"),(0,r.kt)("li",{parentName:"ul"},"Die JavaDoc findet man ",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/ActionListener.html"},"hier"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="java.awt.event.ActionListener"',title:'"java.awt.event.ActionListener"'},"package java.awt.event;\n\nimport java.util.EventListener;\n\npublic interface ActionListener extends EventListener {\n\n    public void actionPerformed(ActionEvent e);\n\n}\n")),(0,r.kt)("h2",{id:"actionlistener-beispiel-timebutton-klasse"},"ActionListener Beispiel: TimeButton Klasse"),(0,r.kt)("p",null,"Das nachfolgende Programm zeigt ein Swing-Programm, das in einfacher Art interaktiv ist. Bei jedem Klick auf den Button wird in einem ",(0,r.kt)("inlineCode",{parentName:"p"},"JLabel")," das aktuelle Datum mit Uhrzeit angezeigt. (Die Starterklasse ist weggelassen.)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.util.Date;\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\n// highlight-start\n\n// `implements ActionListener` wird neu hinzugef\xfcgt.\n// Damit wird die Methode `actionPerformed(ActionEvent e)` der Klasse hinzugef\xfcgt.\npublic class TimeButton extends JFrame implements ActionListener {\n\n// highlight-end\n  private JButton commandButton = new JButton("show time");\n  private JLabel outputLabel = new JLabel();\n\n  public void showDialog() {\n    setLayout(null);\n\n    outputLabel.setBounds(10, 40, 250, 15);\n    commandButton.setBounds(10, 60, 250, 20);\n    add(outputLabel);\n    add(commandButton);\n    // highlight-start\n\n    // Hier wird die Klasse beim Button `commandButton` registriert\n    // Ohne diese Anweisung macht der `commandButton` nix!\n    commandButton.addActionListener(this); \n\n    // highlight-end\n    setDefaultCloseOperation(EXIT_ON_CLOSE);\n    setSize(300, 300);\n    setTitle("JFrame TimeButton");\n    setVisible(true);\n  }\n  // highlight-start\n\n  // Diese Methode wird immer ausgef\xfchrt, wenn der `commandButton` gedr\xfcckt wird\n  @Override // dies signalisiert, dass wir die Methode definieren m\xfcssen!\n  public void actionPerformed(ActionEvent e) {\n    // Wenn der `commandButton` gedr\xfcckt wird, wird ein neues Datum ins `outputLabel` geschrieben\n    outputLabel.setText("" + new Date()); \n  }\n\n  // highlight-end\n}\n')),(0,r.kt)("h3",{id:"erl\xe4uterung-zum-code"},"Erl\xe4uterung zum Code"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die Komponenten sind im Klassen-Body initialisiert. Sie sind dadurch ",(0,r.kt)("strong",{parentName:"li"},"Instanz-Variablen"),", das heisst sie sind \xfcberall in der Klasse sichtbar und nicht nur in dem Codeblock, in welchem sie erzeugt wurden. Statt von Variablen spricht man bei Deklarationen an dieser Stelle von Attributen, Instanz-Variablen oder Felder."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"implements ActionListener"),": Dies bewirkt, dass die Klasse in der Lage ist, Meldungen zu verarbeiten. ",(0,r.kt)("inlineCode",{parentName:"li"},"JButtons")," k\xf6nnen zum Beispiel solche Meldungen verschicken. Unsere Klasse ist nun ",(0,r.kt)("strong",{parentName:"li"},"gezwungen")," die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"actionPerformed(ActionEvent e)")," zu implementieren."),(0,r.kt)("li",{parentName:"ul"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"showDialog()")," wird die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"commandButton.addActionListener(this);")," aufgerufen. Mit diesem Aufruf kann sich eine Klasse bei einem ",(0,r.kt)("inlineCode",{parentName:"li"},"JButton")," ",(0,r.kt)("strong",{parentName:"li"},"registrieren")," und wird anschliessend immer benachrichtigt, wenn die Schaltfl\xe4che bet\xe4tigt wurde. Mit dem Schl\xfcsselwort ",(0,r.kt)("inlineCode",{parentName:"li"},"this")," wird ausgesagt, dass sich die Klasse selbst als \u201cListener\u201d (also Zuh\xf6rer) hinzuf\xfcgt."),(0,r.kt)("li",{parentName:"ul"},"Wird die Schaltfl\xe4che bet\xe4tigt, so benachrichtigt der ",(0,r.kt)("inlineCode",{parentName:"li"},"JButton")," die Klasse, indem er die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"actionPerformed(ActionEvent e)")," aufruft. Der Parameter beim Aufruf ist vom Typ ",(0,r.kt)("inlineCode",{parentName:"li"},"ActionEvent"),". Mit diesem Event kann \xfcber die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"getSource()")," herausgefunden werden, welche Komponente den Aufruf ausgel\xf6st hat. So kann mittels verschiedenen if-Abfragen entschieden werden, welcher ",(0,r.kt)("inlineCode",{parentName:"li"},"JButton")," bet\xe4tigt wurde. (Unten folgt ein Beispiel dazu.)"),(0,r.kt)("li",{parentName:"ul"},"Zudem zeigt das Beispiel wie Werte in Komponenten mit der Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"setText(String message)")," gesetzt werden.")),(0,r.kt)("h2",{id:"feststellen-welcher-button-gedr\xfcckt-wurde"},"Feststellen, welcher Button gedr\xfcckt wurde"),(0,r.kt)("p",null,"Falls ein Fenster mehrere Buttons hat, muss sich die Fensterklasse bei jedem Button registrieren, damit sie bei einem Klick benachrichtigt wird. Jedes Mal, wenn ein Button gedr\xfcckt wird, erfolgt ein Aufruf der Methode actionPerformed. In dieser Methode muss nun herausgefunden werden, wer\nder Urheber des Aufrufs ist. "),(0,r.kt)("p",null,"Dies l\xe4sst sich wie folgt feststellen:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Mehrere Buttons unterscheiden mit e.getSource()"',title:'"Mehrere',Buttons:!0,unterscheiden:!0,mit:!0,'e.getSource()"':!0},'public class TimeButton extends JFrame implements ActionListener {\n  private JButton commandButton = new JButton("show time");\n  private JButton otherButton = new JButton("do something different");\n\n  // ... nachvolgender Code ausgeblendet ...\n\n  public void showDialog() {\n    // ... vorausgehender Code ausgeblendet ...\n    // highlight-start\n\n    commandButton.addActionListener(this);\n    otherButton.addActionListener(this);\n\n    // highlight-end\n    // ... nachvolgender Code ausgeblendet ...\n  }\n\n  @Override // dies signalisiert, dass wir die Methode definieren m\xfcssen!\n  public void actionPerformed(ActionEvent e) {\n    // highlight-start\n\n    if (e.getSource() == commandButton) { // \n      // wird ausgef\xfchrt, wenn der `commandButton` gedr\xfcckt wurde\n    } else if (e.getSource() == otherButton) {\n      // wird ausgef\xfchrt, wenn der `otherButton` gedr\xfcckt wurde\n    }\n\n    // highlight-end\n  }\n\n}\n')))}c.isMDXComponent=!0}}]);