"use strict";(self.webpackChunkbbzbl_modul_404=self.webpackChunkbbzbl_modul_404||[]).push([[8946],{6561:function(e,n,t){t.r(n),t.d(n,{assets:function(){return K},contentTitle:function(){return M},default:function(){return D},frontMatter:function(){return z},metadata:function(){return N},toc:function(){return C}});var a=t(5893),s=t(1151),i=t(7294),r=t(512),l=t(2466),c=t(6550),d=t(469),o=t(1980),u=t(7392),h=t(12);function b(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return b(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function j(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,c.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=m(e),[r,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!j({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,o]=g({queryString:t,groupId:a}),[u,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,h.Nk)(t);return[a,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),x=(()=>{const e=c??u;return j({value:e,tabValues:s})?e:null})();(0,d.Z)((()=>{x&&l(x)}),[x]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!j({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),o(e),b(e)}),[o,b,s]),tabValues:s}}var p=t(2389),f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.o5)(),u=e=>{const n=e.currentTarget,t=d.indexOf(n),a=c[t].value;a!==s&&(o(n),i(a))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,a.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>d.push(e),onKeyDown:h,onClick:u,...i,className:(0,r.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function k(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=x(e);return(0,a.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,a.jsx)(v,{...e,...n}),(0,a.jsx)(k,{...e,...n})]})}function V(e){const n=(0,p.Z)();return(0,a.jsx)(y,{...e,children:b(e.children)},String(n))}var I={tabItem:"tabItem_Ymn6"};function w(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(I.tabItem,s),hidden:t,children:n})}const z={},M="Fachklassen",N={id:"konzepte/fachklassen",title:"Fachklassen",description:'Eine Fachklasse ist eine Klasse, die nur "im Hintergrund" arbeitet und',source:"@site/docs/konzepte/fachklassen.md",sourceDirName:"konzepte",slug:"/konzepte/fachklassen",permalink:"/bbzbl-modul-404/docs/konzepte/fachklassen",draft:!1,unlisted:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-404/tree/main/docs/konzepte/fachklassen.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ActionListener",permalink:"/bbzbl-modul-404/docs/konzepte/actionlistener"},next:{title:"Formatierung",permalink:"/bbzbl-modul-404/docs/konzepte/formatierung"}},K={},C=[{value:"Klassenstruktur",id:"klassenstruktur",level:2},{value:"Instanziierung und Verwendung eines Objekts/Instanz",id:"instanziierung-und-verwendung-eines-objektsinstanz",level:2},{value:"\ud83e\uddb8 Unterschied von einem Objekt und einer Variable",id:"-unterschied-von-einem-objekt-und-einer-variable",level:2}];function E(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"fachklassen",children:"Fachklassen"}),"\n",(0,a.jsxs)(n.p,{children:["Eine ",(0,a.jsx)(n.strong,{children:"Fachklasse"}),' ist eine Klasse, die nur "im Hintergrund" arbeitet und\n',(0,a.jsx)(n.strong,{children:"nicht f\xfcr die Interaktion mit dem Benutzer zust\xe4ndig ist"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"klassenstruktur",children:"Klassenstruktur"}),"\n",(0,a.jsxs)(n.p,{children:["Gem\xe4ss aktuellem Wissensstand folgen Klassen folgendem ",(0,a.jsx)(n.strong,{children:"Schema"}),":"]}),"\n","\n","\n",(0,a.jsxs)(V,{children:[(0,a.jsxs)(w,{className:"shadow--tl",value:"apple",label:"Klassen-Deklaration",default:!0,children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"// highlight-next-line\npublic class ClassName { // Klassendeklaration Start\n\n  private int myInstanceVariable;                // Instanzvariablen\n\n  public void setMyInstanceVariable(int value) { // Methode (setter)\n    myInstanceVariable = value;\n  }\n\n  public int getMyInstanceVariable() {           // Methode (getter)\n    return myInstanceVariable;\n  }\n\n// highlight-next-line\n} // Klassendeklaration Ende\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Die ",(0,a.jsx)(n.code,{children:"Klassen-Deklaration"})," definiert den ",(0,a.jsx)(n.strong,{children:"Namen"})," der Klasse."]}),"\n",(0,a.jsxs)(n.li,{children:["Der ",(0,a.jsx)(n.strong,{children:"Namen"})," der Klasse definiert automatisch auch einen ",(0,a.jsx)(n.strong,{children:"Datentyp"}),"!"]}),"\n"]})]}),(0,a.jsxs)(w,{className:"shadow--tl",value:"body",label:"Klassen-Body",default:!0,children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class ClassName { // Klassendeklaration Start\n  // highlight-start\n\n  private int myInstanceVariable;                // Instanzvariablen\n\n  public void setMyInstanceVariable(int value) { // Methode (setter)\n    myInstanceVariable = value;\n  }\n\n  public int getMyInstanceVariable() {           // Methode (getter)\n    return myInstanceVariable;\n  }\n\n  // highlight-end\n} // Klassendeklaration Ende\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Der Klassenbody beinhaltet die ",(0,a.jsxs)(n.strong,{children:["Deklaration der ",(0,a.jsx)(n.code,{children:"Instanz-Variablen"})," und\n",(0,a.jsx)(n.code,{children:"Instanz-Methoden"})]})]}),"\n",(0,a.jsxs)(n.li,{children:["Innerhalb des Body darf ",(0,a.jsx)(n.strong,{children:"kein ausf\xfchrenden Code"})," stehen!","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Dieser befindet sich ",(0,a.jsx)(n.strong,{children:"immer"})," innerhalb vom ",(0,a.jsx)(n.code,{children:"Methoden-Body"})]}),"\n"]}),"\n"]}),"\n"]})]}),(0,a.jsxs)(w,{className:"shadow--tl",value:"orange",label:"Instanz-Variablen",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class ClassName { // Klassendeklaration Start\n  // highlight-start\n\n  private int myInstanceVariable;                // Instanzvariablen\n\n  // highlight-end\n  public void setMyInstanceVariable(int value) { // Methode (setter)\n    myInstanceVariable = value;\n  }\n\n  public int getMyInstanceVariable() {           // Methode (getter)\n    return myInstanceVariable;\n  }\n\n} // Klassendeklaration Ende\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Instanz-Variablen"})," sind Variablen welche im ",(0,a.jsx)(n.code,{children:"Klassen-Body"})," definiert werden."]}),"\n",(0,a.jsxs)(n.li,{children:["Daher befinden sie sich ",(0,a.jsx)(n.strong,{children:"nicht innerhalb"})," einer ",(0,a.jsx)(n.code,{children:"Methode"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Instanzvariablen k\xf6nnen innerhalb ",(0,a.jsxs)(n.strong,{children:["aller ",(0,a.jsx)(n.code,{children:"Instanz-Methoden"})]})," zugegriffen\nwerden."]}),"\n",(0,a.jsxs)(n.li,{children:["Das Wort ",(0,a.jsx)(n.code,{children:"private"})," bedeutet, dass die Variable aber nur innerhalb der Klasse\nsichtbar ist, ",(0,a.jsx)(n.strong,{children:"nicht von ausserhalb"}),"."]}),"\n"]})]}),(0,a.jsxs)(w,{className:"shadow--tl",value:"banana",label:"Instanz-Methoden",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class ClassName { // Klassendeklaration Start\n\n  private int myInstanceVariable;                // Instanzvariablen\n\n  // highlight-start\n  public void setMyInstanceVariable(int value) { // Methode (setter)\n    myInstanceVariable = value;\n  }\n\n  public int getMyInstanceVariable() {           // Methode (getter)\n    return myInstanceVariable;\n  }\n  // highlight-end\n\n} // Klassendeklaration Ende\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["sind Methoden innerhalb einer Klasse, welche ",(0,a.jsxs)(n.strong,{children:["nicht ",(0,a.jsx)(n.code,{children:"static"})]})," deklariert\nsind"]}),"\n",(0,a.jsxs)(n.li,{children:["k\xf6nnen auf alle ",(0,a.jsx)(n.code,{children:"Instanz-Variablen"})," zugreifen"]}),"\n",(0,a.jsxs)(n.li,{children:["In ihnen wird die ",(0,a.jsx)(n.strong,{children:"Fachlogik"})," ausprogrammiert","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["H\xe4ufig werden ",(0,a.jsx)(n.code,{children:"Instanz-Variablen"})," mutiert, verarbeitet und oder\nzur\xfcckgegeben"]}),"\n"]}),"\n"]}),"\n"]})]}),(0,a.jsxs)(w,{className:"shadow--tl",value:"instanzmethodenbody",label:"Methoden-Body",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class ClassName { // Klassendeklaration Start\n\n  private int myInstanceVariable;                // Instanzvariablen\n\n  public void setMyInstanceVariable(int value) { // Methode (setter)\n    // highlight-next-line\n    myInstanceVariable = value;\n  }\n\n  public int getMyInstanceVariable() {           // Methode (getter)\n    // highlight-next-line\n    return myInstanceVariable;\n  }\n\n} // Klassendeklaration Ende\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Im ",(0,a.jsx)(n.code,{children:"Methoden-Body"})," befindet sich der ",(0,a.jsx)(n.strong,{children:"eigentliche Code f\xfcr die Fachlogik"})]}),"\n",(0,a.jsxs)(n.li,{children:["Werden ",(0,a.jsx)(n.code,{children:"Variablen"})," innerhalb vom Methoden-Body deklariert, sind diese\n",(0,a.jsx)(n.strong,{children:"ausschliesslich innerhalb diesem"}),", ab deren deklaration\nverwendbar/sichtbar."]}),"\n"]})]})]}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:["Keine ",(0,a.jsx)(n.code,{children:"main"})," Methode in einer Fachklasse"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Es gibt ",(0,a.jsx)(n.strong,{children:"keine"})," Methode ",(0,a.jsx)(n.code,{children:"public static void main(String[] args)"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Diese sollte ",(0,a.jsx)(n.strong,{children:"nur"})," in der ",(0,a.jsx)(n.code,{children:"Starter"})," Klasse existieren"]}),"\n",(0,a.jsxs)(n.li,{children:["Es ist theoretisch m\xf6glich mehrere ",(0,a.jsx)(n.code,{children:"main"})," Methoden zu haben, dies ist jedoch\n",(0,a.jsx)(n.strong,{children:"schlechter Stil"})]}),"\n"]})]}),"\n",(0,a.jsx)(n.admonition,{title:"Klickt durch die Tabs!",type:"danger",children:(0,a.jsxs)(n.p,{children:["Bitte clicked alle Tabs oberhalb einmal an und ",(0,a.jsx)(n.strong,{children:"versucht zu verstehen"}),", wie\neine Klasse genau aufgebaut ist!"]})}),"\n",(0,a.jsx)(n.h2,{id:"instanziierung-und-verwendung-eines-objektsinstanz",children:"Instanziierung und Verwendung eines Objekts/Instanz"}),"\n",(0,a.jsx)(n.p,{children:"Objekte lassen sich im Code wie folgt erstellen:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Datentyp    Variable       Objektzuweisung  Objekterstellung\n   ClassName   variablenName         =         new ClassName();\n\n// Es k\xf6nnen mehrere Variablen mit Objekte der selben Klasse definiert werden\n   ClassName   otherClassName        =         new ClassName();\n\n//               Mit einem Punkt "." wird auf die Instanz-Methoden zugegriffen!\n   variablenName.setMyInstanceVariable(12);\n\n// Der R\xfcckgrabewert einer Methode kann in einer Variablen gespeichert werden\n   int value = variablenName.getMyInstanceVariable();\n\n// Der R\xfcckgrabewert einer Methode kann auch direkt wiederverwendet werden\n   otherObject.setMyInstanceVariable(variablenName.getMyInstanceVariable());\n'})}),"\n",(0,a.jsxs)(n.admonition,{title:"Je besser die Namen desto leserlicher wird der Code!",type:"tip",children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ClassName"})," ist in dem oberen Beispiel generisch gew\xe4hlt da es sich um ein\ngenerelles Beispiel handelt. Anstatt ",(0,a.jsx)(n.code,{children:"ClassName"})," sollte sp\xe4ter ein\n",(0,a.jsx)(n.strong,{children:"spezifischer Namen"})," gew\xe4hlt werden, wie z.B. ",(0,a.jsx)(n.code,{children:"Account"}),". Der Name der Variable\nkann beliebig sein. Das gleiche gilt f\xfcr ",(0,a.jsx)(n.code,{children:"Variablen"})," und ",(0,a.jsx)(n.code,{children:"Methoden"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Account savingAccount = new Account(); // Toll\nXyz b = new Xzy();                     // Evt. nicht ganz so toll ;)\n"})})]}),"\n",(0,a.jsx)(n.admonition,{title:"Instanz oder Objekt, WTF :confused: ?!?",type:"note",children:(0,a.jsxs)(n.p,{children:["Die W\xf6rter Objekt und Instanz sind ",(0,a.jsx)(n.strong,{children:"Synonyme"}),", k\xf6nnen also beliebig vertauscht\nwerden."]})}),"\n",(0,a.jsx)(n.h2,{id:"-unterschied-von-einem-objekt-und-einer-variable",children:"\ud83e\uddb8 Unterschied von einem Objekt und einer Variable"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Ein Objekt ist ",(0,a.jsx)(n.strong,{children:"immer in einer Variable"})," gespeichert"]}),"\n",(0,a.jsx)(n.li,{children:"Eine Variable muss aber nicht immer ein Objekt beinhalten"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Account accountObjektVariable = new Account();\nint intVariable = 1;\n\n// `accountObjektVariable` beinhaltet ein Objekt der Klasse Account\n// `intVariable` beinhaltet den den Wert 1 vom `primitiven` Datentyp int\n\naccountObjektVariable.getClass(); // Ein Objekt besitzt Methoden welche ausgef\xfchrt werden k\xf6nnen\nintVariable.getClass(); // f\xfchrt zu einem ERROR. (versuche es in `eclipse`!)\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"Faustregel",type:"tip",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Wenn der ",(0,a.jsx)(n.strong,{children:"Datentyp"})," mit einem ",(0,a.jsx)(n.strong,{children:"Grossbuchstaben"})," anf\xe4ngt (",(0,a.jsx)(n.code,{children:"String"}),",\n",(0,a.jsx)(n.code,{children:"Account"}),", ...) handelt es sich um ein ",(0,a.jsx)(n.strong,{children:"Objekt"})]}),"\n",(0,a.jsxs)(n.li,{children:["Wenn der ",(0,a.jsx)(n.strong,{children:"Datentyp"})," mit einem ",(0,a.jsx)(n.strong,{children:"Kleinbuchstaben"})," anf\xe4ngt (",(0,a.jsx)(n.code,{children:"int"}),", ",(0,a.jsx)(n.code,{children:"double"}),",\n",(0,a.jsx)(n.code,{children:"char"}),", ...) ist es ",(0,a.jsx)(n.strong,{children:"kein Objekt"})]}),"\n",(0,a.jsxs)(n.li,{children:["Ein ",(0,a.jsx)(n.strong,{children:"Objekt besitzt Methoden"}),", welche man ausf\xfchren kann, ein ",(0,a.jsx)(n.strong,{children:"primitiver\nDatentyp nicht"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Jedes Objekt"})," besitzt die Methode ",(0,a.jsx)(n.code,{children:"getClass()"}),";"]}),"\n"]}),"\n"]}),"\n"]})})]})}function D(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(E,{...e})}):E(e)}},1151:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var a=t(7294);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);