"use strict";(self.webpackChunkbbzbl_modul_404=self.webpackChunkbbzbl_modul_404||[]).push([[9828],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),u=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,p=c["".concat(l,".").concat(m)]||c[m]||b[m]||r;return n?i.createElement(p,o(o({ref:t},d),{},{components:n})):i.createElement(p,o({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>b,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var i=n(7462),a=(n(7294),n(3905));const r={sidebar_position:4},o="4. JButton Aktivieren",s={unversionedId:"aufgaben-swing/buttons-aktivieren",id:"aufgaben-swing/buttons-aktivieren",title:"4. JButton Aktivieren",description:"Machen Sie sich mit dem Konzept des ActionListener bekannt bevor Sie weiterfahren!",source:"@site/docs/aufgaben-swing/buttons-aktivieren.md",sourceDirName:"aufgaben-swing",slug:"/aufgaben-swing/buttons-aktivieren",permalink:"/bbzbl-modul-404/docs/aufgaben-swing/buttons-aktivieren",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-404/tree/main/docs/aufgaben-swing/buttons-aktivieren.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"3. JFrame Komponenten",permalink:"/bbzbl-modul-404/docs/aufgaben-swing/komponenten"},next:{title:"5. Strings in Zahlen umwandeln",permalink:"/bbzbl-modul-404/docs/aufgaben-swing/strings-nach-int-umwandeln"}},l={},u=[{value:"Aufgabe 1: Einen Wert kopieren",id:"aufgabe-1-einen-wert-kopieren",level:2},{value:"UML",id:"uml",level:3},{value:"Aufgabe 2: Mehrere Buttons auswerten",id:"aufgabe-2-mehrere-buttons-auswerten",level:2},{value:"UML",id:"uml-1",level:3},{value:"Cheat Sheet",id:"cheat-sheet",level:2}],d={toc:u},c="wrapper";function b(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"4-jbutton-aktivieren"},"4. JButton Aktivieren"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u261d\ufe0f ",(0,a.kt)("strong",{parentName:"p"},"Machen Sie sich mit dem Konzept des ",(0,a.kt)("a",{parentName:"strong",href:"/bbzbl-modul-404/docs/konzepte/actionlistener"},"ActionListener")," bekannt bevor Sie weiterfahren!"))),(0,a.kt)("h2",{id:"aufgabe-1-einen-wert-kopieren"},"Aufgabe 1: Einen Wert kopieren"),(0,a.kt)("p",null,"Erstellen Sie das Programm unten. Das Ziel ist, dass bei Anklicken der Schaltfl\xe4che der Wert aus dem Textfeld in das Label unterhalb kopiert wird, w\xe4hrend das obere Textfeld geleert wird."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(5838).Z,width:"906",height:"906"})),(0,a.kt)("h3",{id:"uml"},"UML"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"JFrame, ActionListener, JLabel, JButton und JTextField wird im UML beschrieben,\nist jedoch direkt in Java vorhanden. Es werden die verwendeten Methoden\naufgelistet!")),(0,a.kt)("mermaid",{value:'classDiagram\n  direction LR\n  class JFrame:::javaBuiltIn {\n    +add(comp : Component)\n    +setDefaultCloseOperation(operation : int)\n    +setLayout(manager : LayoutManager)\n    +setSize(width : int, height : int)\n    +setTitle(title : String)\n    +setVisible(isVisible : boolean)\n  }\n  class ActionListener:::javaBuiltIn {\n    +actionPerformed(event : ActionEvent)\n  }\n  class JTextField:::javaBuiltIn {\n    +getText() String\n    +setText(value : String)\n  }\n  class JLabel:::javaBuiltIn {\n    +setText(value : String)\n  }\n  class JButton:::javaBuiltIn {\n    +addActionListener(actionListener : ActionListener)\n  }\n\n  class Starter {\n    +main(args: String[])$\n  }\n  class Aufgabe1 {\n    -textfield : JTextField\n    -label : JLabel\n    -button : JButton\n    +showDialog()\n    +actionPerformed(event : ActionEvent)\n  }\n\n  Starter ..> "1" Aufgabe1 : uses\n  Aufgabe1 --|> JFrame : extends\n  Aufgabe1 ..|> ActionListener : implements\n  Aufgabe1 ..> JTextField : uses\n  Aufgabe1 ..> JLabel: uses\n  Aufgabe1 ..> JButton: uses'}),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Immer zuerste selber versuchen! L\xf6sung abtippen, nicht kopieren ;)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JTextField;\n\npublic class Aufgabe1 extends JFrame implements ActionListener {\n  private JTextField textfield = new JTextField();\n  private JLabel label = new JLabel("");\n  private JButton button = new JButton("copy JTextField > JLabel");\n\n  public void showDialog() {\n    setLayout(null);\n\n    textfield.setBounds(10, 10, 280, 30);\n    add(textfield);\n    label.setBounds(10, 60, 280, 30);\n    add(label);\n    button.setBounds(10, 110, 280, 30);\n    add(button);\n    button.addActionListener(this);\n\n    setDefaultCloseOperation(EXIT_ON_CLOSE);\n    setSize(300, 300);\n    setTitle("Buttons Aktivieren: Aufgabe1");\n    setVisible(true);\n  }\n\n  @Override\n  public void actionPerformed(ActionEvent e) {\n    String text = textfield.getText(); // Auslesen vom Textfeld\n    label.setText(text); // Kopieren vom Textfeld\n    textfield.setText(""); // leeren des Textfeldes\n  }\n}\n'))),(0,a.kt)("h2",{id:"aufgabe-2-mehrere-buttons-auswerten"},"Aufgabe 2: Mehrere Buttons auswerten"),(0,a.kt)("p",null,"Erstellen Sie das Programm unten. Das Ziel ist, dass beim Anklicken der\nSchaltfl\xe4che der Wert aus dem Textfeld in das Label unterhalb kopiert\nwird, w\xe4hrend das obere Textfeld geleert wird."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(6567).Z,width:"906",height:"906"})),(0,a.kt)("h3",{id:"uml-1"},"UML"),(0,a.kt)("mermaid",{value:'classDiagram\n  direction LR\n  class JFrame:::javaBuiltIn {\n    +add(comp : Component)\n    +setDefaultCloseOperation(operation : int)\n    +setLayout(manager : LayoutManager)\n    +setSize(width : int, height : int)\n    +setTitle(title : String)\n    +setVisible(isVisible : boolean)\n  }\n  class ActionListener:::javaBuiltIn {\n    +actionPerformed(event : ActionEvent)\n  }\n  <<interface>> ActionListener\n  class Starter {\n    +main(args: String[])$\n  }\n  class Aufgabe2 {\n    -buttonA: JButton\n    -buttonB : JButton\n    -buttonC : JButton\n    -label : JLabel\n    +showDialog()\n    +actionPerformed(event : ActionEvent)\n  }\n  class JLabel:::javaBuiltIn {\n    +setBounds(x : int, y : int, width: int, height : int)\n    +setText(value : String)\n  }\n  class JButton:::javaBuiltIn {\n    +addActionListener(actionListener : ActionListener)\n    +getText() String\n    +setBounds(x : int, y : int, width: int, height : int)\n  }\n\n  Starter ..> "1" Aufgabe2 : uses\n  Aufgabe2 --|> JFrame : extends\n  Aufgabe2 ..|> ActionListener : implements\n  Aufgabe2 ..> JLabel: uses\n  Aufgabe2 ..> JButton: uses'}),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Immer zuerste selber versuchen! L\xf6sung abtippen, nicht kopieren ;)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JTextField;\n\npublic class Aufgabe2 extends JFrame implements ActionListener {\n  private JLabel label = new JLabel("");\n  private JButton buttonA = new JButton("a");\n  private JButton buttonB = new JButton("b");\n  private JButton buttonC = new JButton("c");\n\n  public void showDialog() {\n    setLayout(null);\n\n    buttonA.setBounds(10, 10, 100, 30);\n    add(buttonA);\n    buttonA.addActionListener(this);\n    buttonB.setBounds(10, 50, 100, 30);\n    add(buttonB);\n    buttonB.addActionListener(this);\n    buttonC.setBounds(10, 90, 100, 30);\n    add(buttonC);\n    buttonC.addActionListener(this);\n    label.setBounds(10, 140, 100, 30);\n    add(label);\n\n    setDefaultCloseOperation(EXIT_ON_CLOSE);\n    setSize(300, 300);\n    setTitle("Buttons Aktivieren: Aufgabe2");\n    setVisible(true);\n  }\n\n  @Override\n  public void actionPerformed(ActionEvent e) {\n    // highlight-start\n\n    // Hier werden nun die einzelnen Buttons identifiziert!\n    if (e.getSource() == buttonA) {\n      label.setText(buttonA.getText());\n    } else if(e.getSource() == buttonB) {\n      label.setText(buttonB.getText());\n    } else if(e.getSource() == buttonC) {\n      label.setText(buttonC.getText());\n    }\n\n    // highlight-end\n  }\n}\n'))),(0,a.kt)("h2",{id:"cheat-sheet"},"Cheat Sheet"),(0,a.kt)("admonition",{title:"Code snippets funktionieren nur im richtigen Kontext ;)",type:"note"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Die Klasse definieren\nclass MyClass extends JFrame implements ActionListener\n\n// ActionListener registrieren\nbutton.addActionListener(this);\n\n// Method actionPerformed implementieren\n@Override\npublic void actionPerformed(ActionEvent e) {\n  if (e.getSource() == button) {\n    // do this\n  } elseif (e.getSource() == button2) {\n    // do that\n  }\n}\n")))}b.isMDXComponent=!0},5838:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Buttons-Aktivieren-Aufgabe1-d4c85c7ddfe53caca6bc57245275808f.png"},6567:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Buttons-Aktivieren-Aufgabe2-88b3896886dd9640b0e8731ff7ff4a19.png"}}]);