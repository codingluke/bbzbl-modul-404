"use strict";(self.webpackChunkbbzbl_modul_404=self.webpackChunkbbzbl_modul_404||[]).push([[2344],{8665:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return r},default:function(){return c},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var i=t(5893),a=t(1151);const l={sidebar_position:10},r="10. PlayerPanel",s={id:"aufgaben-swing/player-panel",title:"10. PlayerPanel",description:"Hier gibt es nun noch ein JPanel Beispiel welches es durch folgende Methoden",source:"@site/docs/aufgaben-swing/player-panel.md",sourceDirName:"aufgaben-swing",slug:"/aufgaben-swing/player-panel",permalink:"/bbzbl-modul-404/docs/aufgaben-swing/player-panel",draft:!1,unlisted:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-404/tree/main/docs/aufgaben-swing/player-panel.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"9. JPanel",permalink:"/bbzbl-modul-404/docs/aufgaben-swing/jpanel"},next:{title:"\ud83e\uddb8 Zusatzaufgaben",permalink:"/bbzbl-modul-404/docs/aufgaben-swing/zusatz"}},d={},u=[{value:"Darstellung",id:"darstellung",level:2},{value:"UML",id:"uml",level:2},{value:"Java Code",id:"java-code",level:2},{value:"Aufgabe",id:"aufgabe",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"10-playerpanel",children:"10. PlayerPanel"}),"\n",(0,i.jsx)(n.p,{children:"Hier gibt es nun noch ein JPanel Beispiel welches es durch folgende Methoden\nerm\xf6glicht von aussen die neue Runden zu erstellen und auch die W\xfcrfelwerte der\naktuellen Runde zu setzen."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"playerPanel.startNewRound()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"playerPanel.setDiceValue(index, value)"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["So ist es m\xf6glich f\xfcr zwei Spieler ",(0,i.jsx)("u",{children:"je eine eigene Instanz"})," der gleichen\nKlasse ",(0,i.jsx)(n.code,{children:"PlayerPanel"})," zu erstellen. Dies erm\xf6glicht die Darstellung der Runden\nund den Punkteverlauf."]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:[(0,i.jsx)(n.code,{children:"JPanel"})," wie ",(0,i.jsx)(n.code,{children:"<div></div>"})," in HTML"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ein ",(0,i.jsx)(n.code,{children:"JPanel"})," ist ein Container, der Swing Componenten Gruppieren kann."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"JPanel"}),"'s k\xf6nnen beliebig geschachtelt werden."]}),"\n",(0,i.jsxs)(n.li,{children:["Sie entsprechen damit dem ",(0,i.jsx)(n.code,{children:"<div></div>"})," Tag in HTML."]}),"\n"]})]}),"\n",(0,i.jsx)(n.h2,{id:"darstellung",children:"Darstellung"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(4565).Z+"",width:"1158",height:"758"})}),"\n",(0,i.jsx)(n.h2,{id:"uml",children:"UML"}),"\n",(0,i.jsx)(n.mermaid,{value:"classDiagram\n    direction LR\n    class Starter {\n      +main(args: String[])$\n    }\n\n    class GameGui {\n        -PlayerPanel player1Panel\n        -PlayerPanel player2Panel\n        -JButton newRoundButton\n        -JButton diceButton\n        +GameGui()\n        +actionPerformed(action: ActionEvent)\n    }\n\n    class PlayerPanel {\n       -RoundPanel currentRoundPanel\n       -int y\n       +PlayerPanel()\n       +setDiceValue(int index, int value)\n       +startNewRound()\n    }\n\n    class RoundPanel {\n        -JLabel[] diceLabels\n        +RoundPanel()\n        +setDiceLabelValue(int index, int value)\n    }\n\n    Starter ..> GameGui : new GameGui()\n    GameGui ..> PlayerPanel: new PlayerPanel()\n    PlayerPanel ..> RoundPanel: new RoundPanel()\n    GameGui --|> JFrame : extends\n    GameGui ..|> ActionListener : implements\n    PlayerPanel --|> JPanel: extends\n    RoundPanel --|> JPanel: extends"}),"\n",(0,i.jsx)(n.h2,{id:"java-code",children:"Java Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="Starter.java"',children:"public class Starter {\n\n  public static void main(String[] args) {\n    new GameGui();\n  }\n\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="GameGui.java"',children:'import java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\n\n/**\n * Das GameGui ist die Hauptklasse. Sie zeichnet das Spiel-Fenseter.\n *\n * Es werden zwei `PlayerPanel`\'s erstellt. Momentan wird nur das PlayerPanel\n * vom Spieler 1 aktiv verwendet! Auch werden immer automatisch 5 W\xfcrfe gemacht.\n * Versuchen Sie nun darauf aufbauend das GUI zu erweitern und auch die\n * Spiellogik zu erstellen.\n */\npublic class GameGui extends JFrame implements ActionListener {\n\n\tprivate PlayerPanel player1Panel = new PlayerPanel();\n\tprivate PlayerPanel player2Panel = new PlayerPanel();\n\n\tprivate JButton newRoundButton = new JButton("new round");\n\tprivate JButton diceButton = new JButton("dice 5 times");\n\n\tpublic GameGui() {\n\t\tthis.setLayout(null);\n\n\t\tplayer1Panel.setBounds(10, 10, 350, 367);\n\t\tthis.add(player1Panel);\n\n\t\tplayer2Panel.setBounds(400, 10, 350, 367);\n\t\tthis.add(player2Panel);\n\n\t\tnewRoundButton.setBounds(10, 410, 100, 30);\n\t\tthis.add(newRoundButton);\n\t\tthis.newRoundButton.addActionListener(this);\n\n\t\tdiceButton.setBounds(120, 410, 140, 30);\n\t\tthis.add(diceButton);\n\t\tthis.diceButton.addActionListener(this);\n\n\t\tthis.setSize(800, 550);\n\t\tthis.setDefaultCloseOperation(EXIT_ON_CLOSE);\n\t\tthis.setVisible(true);\n\t}\n\n\t@Override\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tif (e.getSource() == this.newRoundButton) {\n\t\t\t// hier wird nur ein Spieler beachtet\n\t\t\t// nat\xfcrlich sollte das Spiel mit 2 Spieler gehen\n\t\t\tthis.player1Panel.startNewRound();\n\t\t} else if (e.getSource() == this.diceButton) {\n\t\t\t// 5 mal w\xfcrfeln hintereinander,\n\t\t\t// Nat\xfcrlich muss dass dan schritt f\xfcr schritt passieren\n\t\t\t// und auch abgebrochen werden k\xf6nnen\n\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\tint rand = (int) (Math.random() * 6 + 1);\n\t\t\t\tthis.player1Panel.setDiceValue(i, rand);\n\t\t\t}\n\t\t}\n\t}\n\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="PlayerPanel.java"',children:'import java.awt.Color;\n\nimport javax.swing.BorderFactory;\nimport javax.swing.JPanel;\n\n/**\n * PlayerPanel koordiniert und zeichnet RoundPanel\'s f\xfcr einen Spieler. Die\n * Klasse dient nur zur Darstellung und beinhaltet keine Spiellogik.\n */\npublic class PlayerPanel extends JPanel {\n\n\t// private JPanel parentPanel = new JPanel();\n\tprivate RoundPanel currentRoundPanel;\n\tprivate int y = 1; // Vertikale verschiebung der Panels\n\n\tpublic PlayerPanel() {\n\t\tthis.setLayout(null);\n\t\tthis.setBorder(BorderFactory.createLineBorder(Color.black));\n\t\tthis.setVisible(true);\n\t}\n\n\t/**\n\t * Erm\xf6glicht das Setzen eines W\xfcrfelwertes. Delegiert an das RoundPanel der\n\t * aktiven Runde.\n\t *\n\t * @param index - Der index vom Wurf, startet bei 0\n\t * @param value - Der Wert vom Wurf als int (1-6)\n\t */\n\tpublic void setDiceValue(int index, int value) {\n\t\tif (this.currentRoundPanel == null) {\n\t\t\treturn; // Sch\xfctzt vor NullPointer!\n\t\t}\n\t\t// Hier werden die Werte delegiert, also weitergereicht\n\t\tthis.currentRoundPanel.setDiceLabelValue(index, value);\n\t}\n\n\n\t/**\n\t * Startet eine neue Runde. Erstellt ein neues RoundPanel und speichert es als\n\t * aktives RoundPanel in der Instanz-Variable "currentRoundPanel". Sobald eine\n\t * neue Runde gestartet wurde, kann auf die vorherigen Runden nicht mehr\n\t * zugegriffen werden!\n\t */\n\tpublic void startNewRound() {\n\t\tthis.currentRoundPanel = new RoundPanel(); // neues Panel Objekt pro Runde\n\t\t// mit `this.getBounds().width` wird garantiert, dass das RoundPanel\n\t\t// gleich breit ist wie das PlayerPanel.\n\t\tthis.currentRoundPanel.setBounds(1, y, this.getBounds().width - 2, 60);\n\t\tthis.y += 61; // y-Position des n\xe4chsten Runden Panels\n\t\tthis.add(currentRoundPanel); // zum parentPanel hinzuf\xfcgen\n\t\tthis.repaint(); // Alles neu zeichnen\n\t}\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="RoundPanel.java"',children:'import java.awt.Color;\n\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\n\n/**\n * Das RoundPanel dient dazu die f\xfcnf W\xfcrfe einer Runde nebeneinander\n * darzustellen. Die Werte der W\xfcrfe k\xf6nnen durch die Methode\n * `setDiceLabelValue` gesetzt werden.\n */\npublic class RoundPanel extends JPanel {\n\n\t// Ein Array f\xfcr 5 W\xfcrfe!\n\tprivate JLabel[] diceLabels = new JLabel[5];\n\n\t// K\xf6nnte man hier noch Erg\xe4nzungen machen um auch das Total und die Rundensumme\n\t// darzustellen? Es fehlt auch noch die Rundennummer.\n\n\tpublic RoundPanel() {\n\t\tthis.setLayout(null);\n\n\t\tfor (int i = 0; i < diceLabels.length; i++) {\n\t\t\tdiceLabels[i] = new JLabel();\n\t\t\tdiceLabels[i].setBounds(10 + (i * 30), 10, 30, 30);\n\t\t\tadd(diceLabels[i]);\n\t\t}\n\n\t\tthis.setBackground(Color.LIGHT_GRAY);\n\t}\n\n\t/**\n\t * Erm\xf6glicht das Setzen eines W\xfcrfelwertes\n\t *\n\t * @param index - Der index vom Wurf startet bei 0\n\t * @param value - Der Wert vom Wurf als int\n\t **/\n\tpublic void setDiceLabelValue(int index, int value) {\n\t\tdiceLabels[index].setText("" + value);\n\t}\n\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"aufgabe",children:"Aufgabe"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Schreiben Sie den oben bestehenden Code ab, sodass das Bild oben\nreproduzierbar ist."}),"\n",(0,i.jsx)(n.li,{children:"Dies darf als Grundlage f\xfcrs Projekt genommen werden!"}),"\n",(0,i.jsxs)(n.li,{children:["Lesen Sie den ",(0,i.jsx)(n.a,{href:"/bbzbl-modul-404/docs/beurteilungen/lb2",children:"Projektbeschrieb"})," gut durch und\nerg\xe4nzen Sie das Spiel."]}),"\n",(0,i.jsx)(n.li,{children:"Schauen Sie dass die Logik in einer eigenen Klasse geschrieben wird!"}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},4565:function(e,n,t){n.Z=t.p+"assets/images/playerpanel-0d45f72d58729ca06bfe2aefed5adcfc.png"},1151:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return r}});var i=t(7294);const a={},l=i.createContext(a);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);