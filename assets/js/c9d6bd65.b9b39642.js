"use strict";(self.webpackChunkbbzbl_modul_404=self.webpackChunkbbzbl_modul_404||[]).push([[9071],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>b});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),s=c(t),b=r,p=s["".concat(i,".").concat(b)]||s[b]||d[b]||o;return t?a.createElement(p,l(l({ref:n},m),{},{components:t})):a.createElement(p,l({ref:n},m))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=s;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u.mdxType="string"==typeof e?e:r,l[1]=u;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8812:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:8},l="7. Account - Klassendiagramm",u={unversionedId:"aufgaben-grundlagen/account-uml",id:"aufgaben-grundlagen/account-uml",title:"7. Account - Klassendiagramm",description:"Machen Sie sich mit den UML Klassendiagrammen bekannt bevor Sie weiterfahren!",source:"@site/docs/aufgaben-grundlagen/account-uml.md",sourceDirName:"aufgaben-grundlagen",slug:"/aufgaben-grundlagen/account-uml",permalink:"/bbzbl-modul-404/docs/aufgaben-grundlagen/account-uml",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-404/tree/main/docs/aufgaben-grundlagen/account-uml.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"6. Formatierung",permalink:"/bbzbl-modul-404/docs/aufgaben-grundlagen/formatierung"},next:{title:"Aufgaben Swing",permalink:"/bbzbl-modul-404/docs/category/aufgaben-swing"}},i={},c=[{value:"Aufgabe",id:"aufgabe",level:2}],m={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"7-account---klassendiagramm"},"7. Account - Klassendiagramm"),(0,r.kt)("admonition",{title:"WICHTIG",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"\u261d\ufe0f ",(0,r.kt)("strong",{parentName:"p"},"Machen Sie sich mit den ",(0,r.kt)("a",{parentName:"strong",href:"/bbzbl-modul-404/docs/konzepte/uml"},"UML Klassendiagrammen")," bekannt bevor Sie weiterfahren!"))),(0,r.kt)("h2",{id:"aufgabe"},"Aufgabe"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Skizzieren Sie das UML Klassendiagramm der folgenden Klasse ",(0,r.kt)("inlineCode",{parentName:"li"},"Account"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class Account {\n  private double balance = 0;\n\n  public double getBalance() {\n    return balance;\n  }\n  public void deposit(double amount) {\n    balance = balance + amount;\n  }\n  public void withdraw(double amount) {\n    balance = balance - amount;\n  }\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Nur zum \xdcberpr\xfcfen der eigenen Implementation!"),(0,r.kt)("mermaid",{value:"classDiagram\n    class Account{\n      -balance: double\n      +getBalance(): double\n      +deposit(amount: double)\n      +withdraw(amount: double)\n    }"})))}d.isMDXComponent=!0}}]);