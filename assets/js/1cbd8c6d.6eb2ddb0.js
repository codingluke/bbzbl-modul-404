"use strict";(self.webpackChunkbbzbl_modul_404=self.webpackChunkbbzbl_modul_404||[]).push([[3746],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>p});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(t),p=r,b=d["".concat(u,".").concat(p)]||d[p]||m[p]||l;return t?a.createElement(b,i(i({ref:n},c),{},{components:t})):a.createElement(b,i({ref:n},c))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4305:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const l={sidebar_position:1},i="1. Account Applikation",o={unversionedId:"aufgaben-grundlagen/account-application",id:"aufgaben-grundlagen/account-application",title:"1. Account Applikation",description:"Sicherzustellen, dass alle die Entwicklungsumgebung zum laufen haben und auch wieder in Schwung gekommen ist, werden wir diese Aufgabe zusammen l\xf6sen!",source:"@site/docs/aufgaben-grundlagen/account-application.md",sourceDirName:"aufgaben-grundlagen",slug:"/aufgaben-grundlagen/account-application",permalink:"/bbzbl-modul-404/docs/aufgaben-grundlagen/account-application",draft:!1,editUrl:"https://github.com/codingluke/bbzbl-modul-404/tree/main/docs/aufgaben-grundlagen/account-application.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Aufgaben Grundlagen",permalink:"/bbzbl-modul-404/docs/category/aufgaben-grundlagen"},next:{title:"2. Analyse Account Applikation",permalink:"/bbzbl-modul-404/docs/aufgaben-grundlagen/analyse-account-application"}},u={},s=[{value:"Auftrag",id:"auftrag",level:2},{value:"UML der Musterl\xf6sung",id:"uml-der-musterl\xf6sung",level:3},{value:"Erste Hilfe",id:"erste-hilfe",level:3},{value:"Zusatzaufgaben f\xfcr Schnelle",id:"zusatzaufgaben-f\xfcr-schnelle",level:3},{value:"Musterl\xf6sung",id:"musterl\xf6sung",level:2}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"1-account-applikation"},"1. Account Applikation"),(0,r.kt)("admonition",{title:"Live Coding!",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Sicherzustellen, dass alle die Entwicklungsumgebung zum laufen haben und auch wieder in Schwung gekommen ist, werden wir diese Aufgabe zusammen l\xf6sen!")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"th"},"Material")),(0,r.kt)("th",{parentName:"tr",align:"left"},"Wissen und Faktenblatt Modul 403"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Richtzeit")),(0,r.kt)("td",{parentName:"tr",align:"left"},"ca. 45 Minuten")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Sozialform")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\ud83c\udfad ",(0,r.kt)("strong",{parentName:"td"},"Live Coding")," mit Lehrer!")))),(0,r.kt)("h2",{id:"auftrag"},"Auftrag"),(0,r.kt)("p",null,"Erstellen Sie anhand des Wissens und K\xf6nnens aus dem Modul 403 ein Programm, welches einen einfachen Dialog f\xfcr ein Bankkonto realisiert.\nEs soll m\xf6glich sein Geld:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"einzuzahlen")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"abzuheben")),(0,r.kt)("li",{parentName:"ul"},"den Kontostand ",(0,r.kt)("strong",{parentName:"li"},"anzuzeigen"))),(0,r.kt)("admonition",{title:"Wichtig!",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Die Operationen zum ",(0,r.kt)("inlineCode",{parentName:"p"},"einzuzahlen")," und ",(0,r.kt)("inlineCode",{parentName:"p"},"abzuheben")," sollen jeweils ",(0,r.kt)("strong",{parentName:"p"},"durch eine Methode realisiert")," sein.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Die Interaktion mit dem Benutzer soll so aussehen, wie nachfolgend gezeigt.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="AccountApplication Beispiel Terminal Ausgabe"',title:'"AccountApplication',Beispiel:!0,Terminal:!0,'Ausgabe"':!0},"Welcome to the account application\nPlease enter the amount, 0 (zero) to terminate\n10\nTo deposit, press +, to withdraw, press -\n+\nPlease enter the amount, 0 (zero) to terminate\n30\nTo deposit, press +, to withdraw, press -\n+\nPlease enter the amount, 0 (zero) to terminate\n5\nTo deposit, press +, to withdraw, press -\n-\nPlease enter the amount, 0 (zero) to terminate\n0\nFinal balance: 35.0\n")),(0,r.kt)("h3",{id:"uml-der-musterl\xf6sung"},"UML der Musterl\xf6sung"),(0,r.kt)("p",null,"Verwenden Sie das UML um die Struktur der Aufgabe zu verstehen."),(0,r.kt)("mermaid",{value:"classDiagram\n  direction LR\n  class AccountApplication {\n    +main(args: String[])$\n    -withdraw(balance : double, amount : double)$  double\n    -deposit(balance : double, amount : double)$  double\n  }\n  class Scanner:::javaBuiltIn {\n    +Scanner(System.in) Scanner\n    +next() String\n    +nextDouble() double\n  }\n  AccountApplication ..> Scanner : uses"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Das UML von verwendeten built-in Java Klassen, welche Sie also nicht selber\nimplementieren m\xfcssen, sind ausgebleicht dargestellt. Hier also der ",(0,r.kt)("inlineCode",{parentName:"p"},"Scanner"),".\nEs werden immer nur die Methoden angegeben, welche verwendet werden, auch wenn\ndie eigentliche Klasse mehr Methoden besitzt.")),(0,r.kt)("h3",{id:"erste-hilfe"},"Erste Hilfe"),(0,r.kt)("details",null,(0,r.kt)("summary",null," Bitte diese Tipps versuchen bevor Ihr zur Musterl\xf6sung greift!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.Scanner;\n\npublic class AccountApplication {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    double balance = 0;\n    double amount = 0;\n    String command = "";\n\n    System.out.println("Welcome to the account application");\n    do {\n      System.out.println("Please enter the amount, 0 (zero) to terminate");\n      amount = sc.nextDouble();\n      if (amount != 0) {\n        System.out.println("To deposit, press +, to withdraw press -");\n        command = sc.next();\n        if ("+".equals(command)) {\n          // was kommt wohl hier?\n        } else if ("-".equals(command)) {\n          // was kommt wohl hier?\n        }\n      }\n    } while (amount != 0);\n    System.out.println("Final balance: " + "attribute balance"); // was soll hier ausgegeben werden?\n\n    sc.close();\n  }\n\n  // deposit => einzahlen\n  public static double deposit(double balance, double amount) {\n    return 0.0; // implementiere mich\n  }\n\n  // withdraw => abheben\n  public static double withdraw(double balance, double amount) {\n    return 0.0; // implementiere mich\n  }\n}\n'))),(0,r.kt)("h3",{id:"zusatzaufgaben-f\xfcr-schnelle"},"Zusatzaufgaben f\xfcr Schnelle"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Erm\xf6glichen Sie zus\xe4tzlich zu ",(0,r.kt)("inlineCode",{parentName:"li"},"+")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"-")," die Men\xfcauswahl ",(0,r.kt)("inlineCode",{parentName:"li"},"=")," um jederzeit den Kontostand abzufragen."),(0,r.kt)("li",{parentName:"ul"},"Geben Sie am Schluss vor dem Schlusssaldo eine Auflistung aller Transaktionen (Ein- und Auszahlungen) aus.")),(0,r.kt)("h2",{id:"musterl\xf6sung"},"Musterl\xf6sung"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Nur zum \xdcberpr\xfcfen der eigenen Implementation!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.Scanner;\n\npublic class AccountApplication {\n  public static void main(String[] args) {\n    System.out.println("Welcome to the account application");\n    double balance = 0;\n    double amount = 0;\n    String command = "";\n\n    try(Scanner sc = new Scanner(System.in)) {\n      do {\n        System.out.println("Please enter the amount, 0 (zero) to terminate");\n        amount = sc.nextDouble();\n        if (amount != 0) {\n          System.out.println("To deposit, press +, to withdraw press -");\n          command = sc.next();\n          if ("+".equals(command)) {\n            balance = deposit(balance, amount);\n          } else if ("-".equals(command)) {\n            balance = withdraw(balance, amount);\n          };\n        }\n      } while (amount != 0);\n      System.out.println("Final balance: " + balance);\n    }\n  }\n\n  // deposit => einzahlen\n  public static double deposit(double balance, double amount) {\n    return balance + amount;\n  }\n\n  // withdraw => abheben\n  public static double withdraw(double balance, double amount) {\n    return balance - amount;\n  }\n}\n'))))}m.isMDXComponent=!0}}]);